security:
    encoders:
        App\Entity\User:
            algorithm: auto


    role_hierarchy:
        ROLE_MANAGER:       [ROLE_USER]

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        # used to reload user from session & other features (e.g. switch_user)
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: app_user_provider
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator
            logout:
                path: app_logout
                # where to redirect after logout
                # target: app_any_route

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/dashboard,                      roles: ROLE_USER    }
        - { path: ^/mail_preview,                   roles: ROLE_MANAGER }   #Can Preview the Mail Template during Dev
        - { path: ^/employees/add,                  roles: ROLE_MANAGER }
        - { path: ^/employees/edit,                 roles: ROLE_USER    }   #Can access if id equals current_user id
        - { path: ^/employees/details,              roles: ROLE_USER    }   #Can access if id equals current_user id
        - { path: ^/employees,                      roles: ROLE_USER    }
        - { path: ^/projects/add,                   roles: ROLE_MANAGER }
        - { path: ^/projects/edit,                  roles: ROLE_MANAGER }
        - { path: ^/projects/details,               roles: ROLE_USER    }
        - { path: ^/projects,                       roles: ROLE_USER    }
        - { path: ^/jobs/add,                       roles: ROLE_MANAGER }
        - { path: ^/jobs/edit,                      roles: ROLE_MANAGER }
        - { path: ^/jobs/remove,                    roles: ROLE_MANAGER }
        - { path: ^/jobs,                           roles: ROLE_USER    }

